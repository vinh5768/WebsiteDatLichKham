#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnCoSo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhongKham")]
	public partial class dbPhongKhamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBACSI(BACSI instance);
    partial void UpdateBACSI(BACSI instance);
    partial void DeleteBACSI(BACSI instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertPHIEUHEN(PHIEUHEN instance);
    partial void UpdatePHIEUHEN(PHIEUHEN instance);
    partial void DeletePHIEUHEN(PHIEUHEN instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public dbPhongKhamDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PhongKhamConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhongKhamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhongKhamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhongKhamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbPhongKhamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BACSI> BACSIs
		{
			get
			{
				return this.GetTable<BACSI>();
			}
		}
		
		public System.Data.Linq.Table<GIOKHAM> GIOKHAMs
		{
			get
			{
				return this.GetTable<GIOKHAM>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUHEN> PHIEUHENs
		{
			get
			{
				return this.GetTable<PHIEUHEN>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BACSI")]
	public partial class BACSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MABS;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _GIOITINH;
		
		private string _HINHANH;
		
		private string _MOTA;
		
		private System.Nullable<int> _MAKHOA;
		
		private System.Nullable<decimal> _GIAKHAM;
		
		private EntitySet<PHIEUHEN> _PHIEUHENs;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABSChanging(int value);
    partial void OnMABSChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnMAKHOAChanging(System.Nullable<int> value);
    partial void OnMAKHOAChanged();
    partial void OnGIAKHAMChanging(System.Nullable<decimal> value);
    partial void OnGIAKHAMChanged();
    #endregion
		
		public BACSI()
		{
			this._PHIEUHENs = new EntitySet<PHIEUHEN>(new Action<PHIEUHEN>(this.attach_PHIEUHENs), new Action<PHIEUHEN>(this.detach_PHIEUHENs));
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MABS
		{
			get
			{
				return this._MABS;
			}
			set
			{
				if ((this._MABS != value))
				{
					this.OnMABSChanging(value);
					this.SendPropertyChanging();
					this._MABS = value;
					this.SendPropertyChanged("MABS");
					this.OnMABSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="VarChar(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="Int")]
		public System.Nullable<int> MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAKHAM", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GIAKHAM
		{
			get
			{
				return this._GIAKHAM;
			}
			set
			{
				if ((this._GIAKHAM != value))
				{
					this.OnGIAKHAMChanging(value);
					this.SendPropertyChanging();
					this._GIAKHAM = value;
					this.SendPropertyChanged("GIAKHAM");
					this.OnGIAKHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACSI_PHIEUHEN", Storage="_PHIEUHENs", ThisKey="MABS", OtherKey="MABS")]
		public EntitySet<PHIEUHEN> PHIEUHENs
		{
			get
			{
				return this._PHIEUHENs;
			}
			set
			{
				this._PHIEUHENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_BACSI", Storage="_KHOA", ThisKey="MAKHOA", OtherKey="MAKHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.BACSIs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.BACSIs.Add(this);
						this._MAKHOA = value.MAKHOA;
					}
					else
					{
						this._MAKHOA = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUHENs(PHIEUHEN entity)
		{
			this.SendPropertyChanging();
			entity.BACSI = this;
		}
		
		private void detach_PHIEUHENs(PHIEUHEN entity)
		{
			this.SendPropertyChanging();
			entity.BACSI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIOKHAM")]
	public partial class GIOKHAM
	{
		
		private int _MABS;
		
		private System.Nullable<System.TimeSpan> _GIOKHAM1;
		
		public GIOKHAM()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABS", DbType="Int NOT NULL")]
		public int MABS
		{
			get
			{
				return this._MABS;
			}
			set
			{
				if ((this._MABS != value))
				{
					this._MABS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GIOKHAM", Storage="_GIOKHAM1", DbType="Time")]
		public System.Nullable<System.TimeSpan> GIOKHAM1
		{
			get
			{
				return this._GIOKHAM1;
			}
			set
			{
				if ((this._GIOKHAM1 != value))
				{
					this._GIOKHAM1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIEU;
		
		private string _KETQUA1;
		
		private string _NEN;
		
		private string _KHONGNEN;
		
		private System.Nullable<System.DateTime> _NGAYTAIKHAM;
		
		private string _HINHANH1;
		
		private string _HINHANH2;
		
		private EntityRef<PHIEUHEN> _PHIEUHEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUChanging(int value);
    partial void OnMAPHIEUChanged();
    partial void OnKETQUA1Changing(string value);
    partial void OnKETQUA1Changed();
    partial void OnNENChanging(string value);
    partial void OnNENChanged();
    partial void OnKHONGNENChanging(string value);
    partial void OnKHONGNENChanged();
    partial void OnNGAYTAIKHAMChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTAIKHAMChanged();
    partial void OnHINHANH1Changing(string value);
    partial void OnHINHANH1Changed();
    partial void OnHINHANH2Changing(string value);
    partial void OnHINHANH2Changed();
    #endregion
		
		public KETQUA()
		{
			this._PHIEUHEN = default(EntityRef<PHIEUHEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHIEU
		{
			get
			{
				return this._MAPHIEU;
			}
			set
			{
				if ((this._MAPHIEU != value))
				{
					if (this._PHIEUHEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHIEUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEU = value;
					this.SendPropertyChanged("MAPHIEU");
					this.OnMAPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="KETQUA", Storage="_KETQUA1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string KETQUA1
		{
			get
			{
				return this._KETQUA1;
			}
			set
			{
				if ((this._KETQUA1 != value))
				{
					this.OnKETQUA1Changing(value);
					this.SendPropertyChanging();
					this._KETQUA1 = value;
					this.SendPropertyChanged("KETQUA1");
					this.OnKETQUA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEN", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NEN
		{
			get
			{
				return this._NEN;
			}
			set
			{
				if ((this._NEN != value))
				{
					this.OnNENChanging(value);
					this.SendPropertyChanging();
					this._NEN = value;
					this.SendPropertyChanged("NEN");
					this.OnNENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KHONGNEN", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string KHONGNEN
		{
			get
			{
				return this._KHONGNEN;
			}
			set
			{
				if ((this._KHONGNEN != value))
				{
					this.OnKHONGNENChanging(value);
					this.SendPropertyChanging();
					this._KHONGNEN = value;
					this.SendPropertyChanged("KHONGNEN");
					this.OnKHONGNENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTAIKHAM", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYTAIKHAM
		{
			get
			{
				return this._NGAYTAIKHAM;
			}
			set
			{
				if ((this._NGAYTAIKHAM != value))
				{
					this.OnNGAYTAIKHAMChanging(value);
					this.SendPropertyChanging();
					this._NGAYTAIKHAM = value;
					this.SendPropertyChanged("NGAYTAIKHAM");
					this.OnNGAYTAIKHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH1", DbType="VarChar(50)")]
		public string HINHANH1
		{
			get
			{
				return this._HINHANH1;
			}
			set
			{
				if ((this._HINHANH1 != value))
				{
					this.OnHINHANH1Changing(value);
					this.SendPropertyChanging();
					this._HINHANH1 = value;
					this.SendPropertyChanged("HINHANH1");
					this.OnHINHANH1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH2", DbType="VarChar(50)")]
		public string HINHANH2
		{
			get
			{
				return this._HINHANH2;
			}
			set
			{
				if ((this._HINHANH2 != value))
				{
					this.OnHINHANH2Changing(value);
					this.SendPropertyChanging();
					this._HINHANH2 = value;
					this.SendPropertyChanged("HINHANH2");
					this.OnHINHANH2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUHEN_KETQUA", Storage="_PHIEUHEN", ThisKey="MAPHIEU", OtherKey="MAPHIEU", IsForeignKey=true)]
		public PHIEUHEN PHIEUHEN
		{
			get
			{
				return this._PHIEUHEN.Entity;
			}
			set
			{
				PHIEUHEN previousValue = this._PHIEUHEN.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUHEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUHEN.Entity = null;
						previousValue.KETQUA = null;
					}
					this._PHIEUHEN.Entity = value;
					if ((value != null))
					{
						value.KETQUA = this;
						this._MAPHIEU = value.MAPHIEU;
					}
					else
					{
						this._MAPHIEU = default(int);
					}
					this.SendPropertyChanged("PHIEUHEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKHOA;
		
		private string _TENKHOA;
		
		private EntitySet<BACSI> _BACSIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOAChanging(int value);
    partial void OnMAKHOAChanged();
    partial void OnTENKHOAChanging(string value);
    partial void OnTENKHOAChanged();
    #endregion
		
		public KHOA()
		{
			this._BACSIs = new EntitySet<BACSI>(new Action<BACSI>(this.attach_BACSIs), new Action<BACSI>(this.detach_BACSIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOA", DbType="NVarChar(50)")]
		public string TENKHOA
		{
			get
			{
				return this._TENKHOA;
			}
			set
			{
				if ((this._TENKHOA != value))
				{
					this.OnTENKHOAChanging(value);
					this.SendPropertyChanging();
					this._TENKHOA = value;
					this.SendPropertyChanged("TENKHOA");
					this.OnTENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_BACSI", Storage="_BACSIs", ThisKey="MAKHOA", OtherKey="MAKHOA")]
		public EntitySet<BACSI> BACSIs
		{
			get
			{
				return this._BACSIs;
			}
			set
			{
				this._BACSIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BACSIs(BACSI entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_BACSIs(BACSI entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUHEN")]
	public partial class PHIEUHEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHIEU;
		
		private string _HOTEN;
		
		private string _GIOITINH;
		
		private System.DateTime _NAMSINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private System.DateTime _NGAYKHAM;
		
		private System.TimeSpan _GIOKHAM;
		
		private string _MOTA;
		
		private int _MABS;
		
		private string _MAXACTHUC;
		
		private string _TRANGTHAI;
		
		private EntityRef<KETQUA> _KETQUA;
		
		private EntityRef<BACSI> _BACSI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHIEUChanging(int value);
    partial void OnMAPHIEUChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNAMSINHChanging(System.DateTime value);
    partial void OnNAMSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNGAYKHAMChanging(System.DateTime value);
    partial void OnNGAYKHAMChanged();
    partial void OnGIOKHAMChanging(System.TimeSpan value);
    partial void OnGIOKHAMChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnMABSChanging(int value);
    partial void OnMABSChanged();
    partial void OnMAXACTHUCChanging(string value);
    partial void OnMAXACTHUCChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public PHIEUHEN()
		{
			this._KETQUA = default(EntityRef<KETQUA>);
			this._BACSI = default(EntityRef<BACSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHIEU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPHIEU
		{
			get
			{
				return this._MAPHIEU;
			}
			set
			{
				if ((this._MAPHIEU != value))
				{
					this.OnMAPHIEUChanging(value);
					this.SendPropertyChanging();
					this._MAPHIEU = value;
					this.SendPropertyChanged("MAPHIEU");
					this.OnMAPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSINH", DbType="DateTime NOT NULL")]
		public System.DateTime NAMSINH
		{
			get
			{
				return this._NAMSINH;
			}
			set
			{
				if ((this._NAMSINH != value))
				{
					this.OnNAMSINHChanging(value);
					this.SendPropertyChanging();
					this._NAMSINH = value;
					this.SendPropertyChanged("NAMSINH");
					this.OnNAMSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKHAM", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYKHAM
		{
			get
			{
				return this._NGAYKHAM;
			}
			set
			{
				if ((this._NGAYKHAM != value))
				{
					this.OnNGAYKHAMChanging(value);
					this.SendPropertyChanging();
					this._NGAYKHAM = value;
					this.SendPropertyChanged("NGAYKHAM");
					this.OnNGAYKHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOKHAM", DbType="Time NOT NULL")]
		public System.TimeSpan GIOKHAM
		{
			get
			{
				return this._GIOKHAM;
			}
			set
			{
				if ((this._GIOKHAM != value))
				{
					this.OnGIOKHAMChanging(value);
					this.SendPropertyChanging();
					this._GIOKHAM = value;
					this.SendPropertyChanged("GIOKHAM");
					this.OnGIOKHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABS", DbType="Int NOT NULL")]
		public int MABS
		{
			get
			{
				return this._MABS;
			}
			set
			{
				if ((this._MABS != value))
				{
					if (this._BACSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABSChanging(value);
					this.SendPropertyChanging();
					this._MABS = value;
					this.SendPropertyChanged("MABS");
					this.OnMABSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXACTHUC", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string MAXACTHUC
		{
			get
			{
				return this._MAXACTHUC;
			}
			set
			{
				if ((this._MAXACTHUC != value))
				{
					this.OnMAXACTHUCChanging(value);
					this.SendPropertyChanging();
					this._MAXACTHUC = value;
					this.SendPropertyChanged("MAXACTHUC");
					this.OnMAXACTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(20)")]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUHEN_KETQUA", Storage="_KETQUA", ThisKey="MAPHIEU", OtherKey="MAPHIEU", IsUnique=true, IsForeignKey=false)]
		public KETQUA KETQUA
		{
			get
			{
				return this._KETQUA.Entity;
			}
			set
			{
				KETQUA previousValue = this._KETQUA.Entity;
				if (((previousValue != value) 
							|| (this._KETQUA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KETQUA.Entity = null;
						previousValue.PHIEUHEN = null;
					}
					this._KETQUA.Entity = value;
					if ((value != null))
					{
						value.PHIEUHEN = this;
					}
					this.SendPropertyChanged("KETQUA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACSI_PHIEUHEN", Storage="_BACSI", ThisKey="MABS", OtherKey="MABS", IsForeignKey=true)]
		public BACSI BACSI
		{
			get
			{
				return this._BACSI.Entity;
			}
			set
			{
				BACSI previousValue = this._BACSI.Entity;
				if (((previousValue != value) 
							|| (this._BACSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BACSI.Entity = null;
						previousValue.PHIEUHENs.Remove(this);
					}
					this._BACSI.Entity = value;
					if ((value != null))
					{
						value.PHIEUHENs.Add(this);
						this._MABS = value.MABS;
					}
					else
					{
						this._MABS = default(int);
					}
					this.SendPropertyChanged("BACSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PASSWORD;
		
		private string _HOTEN;
		
		private string _EMAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public TAIKHOAN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(50)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
